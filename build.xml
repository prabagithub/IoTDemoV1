<project basedir="." name="JenkinsCIDemo" default="demo">
<target name="demo" depends="clean,init,iotWeb,myUnitTests.test"/>
<target name="iotWeb" depends="BuildIoTWar" />

<property name="PROJECT_HOME" value="${basedir}" />
<property name="PROJECT_SOURCE_HOME" value="${basedir}/src" />
<property name="PROJECT_BUILD_HOME" value="${basedir}/build" />
<property name="PROJECT_BUILD_HOME_TEST" value="${basedir}/build/test" />

<property name="JUNIT_REPORT_DIR" VALUE="${PROJECT_BUILD_HOME}/junitreport" />

<path id="compile.classpath">
  <fileset dir="${PROJECT_HOME}/WebContent/WEB-INF/lib">
<include name="*.jar" />
</fileset>
</path>
	
	<path id="compile.classpath.test">
	  <fileset dir="${PROJECT_BUILD_HOME}/jar">
	<include name="*.jar" />
	</fileset>
	</path>
	
	<path id="compile.classpath.test.junit">
	  <fileset dir="${PROJECT_HOME}/WebContent/WEB-INF/lib">
	<include name="junit-.11.jar" />
	</fileset>
	</path>
	

<!-- ==================== JCID BUILD Clean up Starts====================== -->


<target name="clean">
<echo>JCID Cleanup:</echo>
<delete dir="${PROJECT_HOME}/build" />
</target>

<!-- ==================== JCID BUILD Clean up ===Ends=================== -->



<!-- ==================== JCID BUILD Init Starts====================== -->



<target name="init">
<echo>JCID Init:</echo>
<tstamp />
<mkdir dir="${PROJECT_BUILD_HOME}/jar" />
<mkdir dir="${PROJECT_BUILD_HOME}/deploy" />
<mkdir dir="${PROJECT_BUILD_HOME}/reports/xml" />
<mkdir dir="${PROJECT_BUILD_HOME}/junitreport" />
</target>
<!-- ================ JCID BUUILD Init Ends================ -->


<!-- ================ JCID BUUID Starts================ -->

<target name="CompileIoTWar">
 <echo>Compile IoT Source Files: </echo>
 <tstamp />
 <mkdir dir="${PROJECT_BUILD_HOME}/classes" />
 <javac srcdir="${PROJECT_SOURCE_HOME}/" destdir="${PROJECT_BUILD_HOME}/classes" debug="true">

  <classpath refid="compile.classpath" />
  <!-- <exclude name="**/*Test.java" /> -->
  </javac>
  </target>


<target name="BuildIoTWar" depends="CompileIoTWar">
<echo> Build Iot Demo War: </echo>
<jar destfile="${PROJECT_BUILD_HOME}/jar/iotApp.jar">
<fileset dir="${PROJECT_BUILD_HOME}/classes" includes="**/*.class" />
</jar>
<war destfile="${PROJECT_BUILD_HOME}/deploy/iotApp.war" webxml="${PROJECT_HOME}/WebContent/WEB-INF/web.xml">
<fileset dir="${PROJECT_HOME}/WebContent">
<include name="**/*.*" />
</fileset>
<lib dir="${PROJECT_BUILD_HOME}/jar/">
<include name="*.jar" />
</lib>
</war>
</target>

<!-- JUNIT -->
	
	<target name="CompileIoTTestClass">
	 <echo>Compile IoT Junit Source Files: </echo>
	 <tstamp />
	 <mkdir dir="${PROJECT_BUILD_HOME}/test/classes" />
	 <javac srcdir="${PROJECT_SOURCE_HOME}/" destdir="${PROJECT_BUILD_HOME}/test/classes" debug="true">

	  <classpath refid="compile.classpath" />
	 	<classpath refid="compile.classpath.test" />
	  	<classpath refid="compile.classpath.test.junit" />
	  <include name="**/MyTest.java" />
	 	<include name="**/BillingEngineTest.java" />
	 	
	  </javac>
	  </target>
	
	<target name="MyUnitTest" depends="CompileIoTTestClass">
		<junit printsummary="yes" showoutput="yes" haltonfailure="yes">
			<formatter type="xml"/>
			<formatter type="plain"/>
			<classpath location="${PROJECT_BUILD_HOME}/test/classes"/>
			<classpath>
				<pathelement location="${PROJECT_BUILD_HOME}/jar"/>
			</classpath>
			<classpath refid = "compile.classpath"/>
			<classpath refid="compile.classpath.test" />
			<classpath refid="compile.classpath.test.junit" />
			
			<batchtest fork="yes" todir="${PROJECT_BUILD_HOME}/reports/xml">
				<fileset dir="${PROJECT_SOURCE_HOME}/test/java">
					<include name="**/*Test.java"/>
				</fileset>
			</batchtest>			
		</junit>
	</target>
	
	<target name="myUnitTests.test" depends="MyUnitTest" description="AppTests">
	 	<junitreport todir="${JUNIT_REPORT_DIR}">
	 		<fileset dir="${PROJECT_BUILD_HOME}/reports/xml">
	 			<include name="**/*.xml"/>
	 		</fileset>
	 		<report format="frames" todir="${JUNIT_REPORT_DIR}"/>
	 	</junitreport>
	</target>
		
	<!-- <fail if="AppUnitTest.failed" message-"App Junit Tests have failed.> -->
	
	
</project>


